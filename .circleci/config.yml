defaults: &defaults
    working_directory: ~/repo
    docker:
      - image: karrot/python:1.7

version: 2
jobs:
  test:
    <<: *defaults
    docker:
      - image: karrot/python:1.7
        environment:
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: fstool_e2etest
      - image: redis:3.2.11
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo

      - restore_cache:
          keys:
            - python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
            - python-cache-{{ checksum "requirements.txt" }}-
            - python-cache-
      - run:
          name: set up environment
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            test -d env/bin || virtualenv -p python3 env
            env/bin/pip install --upgrade pip
            env/bin/pip install --upgrade pip-tools
            env/bin/pip-sync requirements*.txt
      - save_cache:
          paths:
            - env
            - ~/.cache/pip
          key: python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: run tests
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            cp config/local_settings.py.ci config/local_settings.py
            (cd mjml && yarn)
            mjml/convert
            mkdir -p test-reports
            env/bin/pytest -n 4 --cov=foodsaving --cov-report xml --junitxml=test-reports/junit.xml
            env/bin/flake8 ./
            env/bin/pip install codecov
            env/bin/codecov
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-dev

  deploy-karrot-world:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-world

  deploy-foodsharing-taiwan:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh foodsharing-taiwan

  update-locales:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
            - python-cache-{{ checksum "requirements.txt" }}-
            - python-cache-
      - run:
          name: set up environment
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            test -d env/bin || virtualenv -p python3 env
            env/bin/pip install --upgrade pip
            env/bin/pip install --upgrade pip-tools
            env/bin/pip-sync requirements*.txt
      - save_cache:
          paths:
            - env
            - ~/.cache/pip
          key: python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - run:
          name: install hub
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            wget https://github.com/github/hub/releases/download/v2.5.1/hub-linux-amd64-2.5.1.tgz
            tar -xf hub-linux-amd64-2.5.1.tgz
            ./hub-linux-amd64-2.5.1/install
            rm hub-linux-amd64-2.5.1.tgz
            rm -r hub-linux-amd64-2.5.1
      - run:
          name: update locales
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "ci@foodsaving.world"
            git config user.name "CircleCI"
            env/bin/tx pull -a --force --no-interactive
            git diff-index --exit-code HEAD || (
                git checkout circleci-update-locales || git checkout -b circleci-update-locales
                git add foodsaving/locale
                git commit -m "[CI] update locales"
                # git push -q https://${GITHUB_TOKEN}@github.com/yunity/karrot-backend.git master
                hub push origin
                hub pull-request -F - <<END
                [CI] Update locales

                There are updated locales available and you just need to click to merge them :)
                END
            )

workflows:
  version: 2
  all-the-things:
    jobs:
      - update-locales
  update-locales:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only: try-update-locales
    jobs:
      - update-locales
