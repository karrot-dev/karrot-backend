defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: karrot/python:2.3

aliases:
  - &restore-env-cache
    restore_cache:
      keys:
        - v2-python-cache-{{ checksum "requirements.txt" }}
        - v2-python-cache-

  - &save-env-cache
    save_cache:
      paths:
        - env
      key: v2-python-cache-{{ checksum "requirements.txt" }}

  - &setup-env
    run:
      name: set up environment
      environment:
        LC_ALL: C.UTF-8
        LANG: C.UTF-8
      command: |
        test -d env/bin || virtualenv -p python3 env
        env/bin/pip install --upgrade pip
        env/bin/pip install --upgrade pip-tools
        PIP_EXISTS_ACTION=w env/bin/pip-sync requirements*.txt

  - &add-token-to-remote
    run:
      name: set git remote to include token
      command: git remote set-url origin https://${GITHUB_TOKEN}@github.com/yunity/karrot-backend.git

version: 2.1
orbs:
  slack: circleci/slack@3.4.2
jobs:
  test:
    <<: *defaults
    environment:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
    docker:
      - image: karrot/python:2.3
        environment:
          PGHOST: 127.0.0.1
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: karrot_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:5.0.3
    steps:
      - checkout
      - *restore-env-cache
      - *setup-env
      - *save-env-cache
      - run:
          name: setup
          command: |
            cp config/local_settings.py.ci config/local_settings.py
            (cd mjml && yarn)
            mjml/convert
      - run:
          name: flake8
          command: env/bin/flake8 ./
      - run:
          name: no missing migrations?
          command: env/bin/python manage.py makemigrations --dry-run --check --no-input
      - run:
          name: no missing makemessages?
          command: |
            set -xe
            source env/bin/activate
            python manage.py makemessages
            git add .
            git diff --staged --exit-code
      - run:
          name: run tests
          command: |
            mkdir -p test-reports
            env/bin/pytest -n 4 --cov=karrot --cov-report xml --junitxml=test-reports/junit.xml
      - run:
          name: upload coverage
          command: |
            env/bin/pip install codecov
            env/bin/codecov
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - slack/status:
          fail_only: true
          only_for_branches: master

  push-locale-messages:
    <<: *defaults
    steps:
      - checkout
      - *restore-env-cache
      - run:
          name: install transifex client
          command: env/bin/pip install transifex-client
      - run:
          name: push source messages to transifex
          command: |
            set -xe
            source env/bin/activate
            tx push -s --no-interactive
      - slack/status:
          fail_only: true

  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-dev
      - slack/status:
          fail_only: true

  deploy-karrot-world:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-world
      - slack/status:
          fail_only: true

  deploy-foodsharing-taiwan:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh foodsharing-taiwan
      - slack/status:
          fail_only: true

  update-locales:
    <<: *defaults
    steps:
      - checkout
      - *restore-env-cache
      - *setup-env
      - *save-env-cache
      - run:
          name: install tx client
          command: env/bin/pip install transifex-client
      - *add-token-to-remote
      - run:
          name: update locales and make pull request
          environment:
            BRANCH: circleci-update-locales
          command: |
            set -xe
            git config credential.helper 'cache --timeout=120'
            git config user.email "ci@foodsaving.world"
            git config user.name "CircleCI"
            git branch --delete --force $BRANCH || true
            git checkout -b $BRANCH
            env/bin/tx pull -a --force --no-interactive
            git add karrot/locale
            git commit -m "[CI] update locales" || exit 0
            git push --force origin $BRANCH
            hub pull-request -m "[CI] Update locales" || true
      - slack/status:
          fail_only: true

  update-dependencies:
    <<: *defaults
    steps:
      - checkout
      - *restore-env-cache
      - *setup-env
      - *add-token-to-remote
      - run:
          name: update dependencies and make pull request
          environment:
            BRANCH: circleci-update-dependencies
          command: |
            set -xe
            git config credential.helper 'cache --timeout=120'
            git config user.email "ci@foodsaving.world"
            git config user.name "CircleCI"
            git branch --delete --force $BRANCH || true
            git checkout -b $BRANCH
            pip-compile --upgrade
            git add requirements.txt
            pushd mjml
            yarn upgrade --latest
            git add package.json yarn.lock
            popd
            git commit -m "[CI] update dependencies" || exit 0
            git push --force origin $BRANCH
            hub pull-request -F - \<<EOL || true
            [CI] update dependencies

            Good morning, I found some fresh dependencies for you!

            This Pull Request contains updates done by \`pip-compile --upgrade\` and
            in \`mjml\`, \`yarn upgrade --latest\`.

            Please check the changes before merging and consider trying out the branch locally to verify if it works.
            EOL
      - slack/status:
          fail_only: true

workflows:
  version: 2
  all-the-things:
    jobs:
      - test
      - push-locale-messages:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - deploy-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - deploy-karrot-world:
          filters:
            branches:
              only:
                - production
          requires:
            - test
      - deploy-foodsharing-taiwan:
          filters:
            branches:
              only:
                - production
          requires:
            - test

  update-locales-cronjob:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only: master
    jobs:
      - update-locales

  update-dependencies-cronjob:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: master
    jobs:
      - update-dependencies
