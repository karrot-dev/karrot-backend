defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: karrot/python:1.7

aliases:
  - &restore-env-cache
    restore_cache:
      keys:
        - python-cache-{{ checksum "requirements.txt" }}
        - python-cache-

  - &save-env-cache
    save_cache:
      paths:
        - env
      key: python-cache-{{ checksum "requirements.txt" }}

  - &setup-env
    run:
      name: set up environment
      environment:
        LC_ALL: C.UTF-8
        LANG: C.UTF-8
      command: |
        test -d env/bin || virtualenv -p python3 env
        env/bin/pip install --upgrade pip
        env/bin/pip install --upgrade pip-tools
        PIP_EXISTS_ACTION=w env/bin/pip-sync requirements*.txt

version: 2
jobs:
  test:
    <<: *defaults
    docker:
      - image: karrot/python:1.7
        environment:
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: fstool_e2etest
      - image: redis:3.2.11
    steps:
      - checkout

      - *restore-env-cache
      - *setup-env
      - *save-env-cache
      - run:
          name: run tests
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            cp config/local_settings.py.ci config/local_settings.py
            (cd mjml && yarn)
            mjml/convert
            mkdir -p test-reports
            env/bin/pytest -n 4 --cov=foodsaving --cov-report xml --junitxml=test-reports/junit.xml
            env/bin/flake8 ./
            env/bin/pip install codecov
            env/bin/codecov
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  push-locale-messages:
    <<: *defaults
    steps:
      - checkout
      - *restore-env-cache
      - run:
          name: push source messages to transifex
          command: |
            set -xe
            cp config/local_settings.py.ci config/local_settings.py
            (cd mjml && yarn && ./convert)
            env/bin/python manage.py makemessages
            env/bin/tx push -s --no-interactive

  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-dev

  deploy-karrot-world:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-world

  deploy-foodsharing-taiwan:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh foodsharing-taiwan

  update-locales:
    <<: *defaults
    steps:
      - checkout
      - *restore-env-cache
      - *setup-env
      - *save-env-cache
      - run:
          name: install hub
          command: |
            wget https://github.com/github/hub/releases/download/v2.5.1/hub-linux-amd64-2.5.1.tgz
            tar -xf hub-linux-amd64-2.5.1.tgz
            ./hub-linux-amd64-2.5.1/install
            rm hub-linux-amd64-2.5.1.tgz
            rm -r hub-linux-amd64-2.5.1
      - run:
          name: set git remote to include token
          command: git remote set-url origin https://${GITHUB_TOKEN}@github.com/yunity/karrot-backend.git
      - run:
          name: update locales and make pull request
          environment:
            BRANCH: circleci-update-locales
          command: |
            set -xe
            git config credential.helper 'cache --timeout=120'
            git config user.email "ci@foodsaving.world"
            git config user.name "CircleCI"
            git branch --delete --force $BRANCH || true
            git checkout -b $BRANCH
            env/bin/tx pull -a --force --no-interactive
            git add foodsaving/locale
            git commit -m "[CI] update locales" || exit 0
            git push --force origin $BRANCH
            hub pull-request -m "[CI] Update locales" || true

workflows:
  version: 2
  all-the-things:
    jobs:
      - test
      - push-locale-messages:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - deploy-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - deploy-karrot-world:
          filters:
            branches:
              only:
                - production
          requires:
            - test
      - deploy-foodsharing-taiwan:
          filters:
            branches:
              only:
                - production
          requires:
            - test
  update-locales-cronjob:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only: master
    jobs:
      - update-locales
