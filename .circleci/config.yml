defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: karrot/python:2.11

aliases:
  - &restore-env-cache
    restore_cache:
      keys:
        - v2-python-cache-{{ checksum "requirements.txt" }}
        - v2-python-cache-

  - &save-env-cache
    save_cache:
      paths:
        - env
      key: v2-python-cache-{{ checksum "requirements.txt" }}

  - &setup-env
    run:
      name: set up environment
      environment:
        LC_ALL: C.UTF-8
        LANG: C.UTF-8
      command: |
        test -d env/bin || virtualenv -p python3 env
        env/bin/pip install --upgrade pip
        env/bin/pip install --upgrade pip-tools
        PIP_EXISTS_ACTION=w env/bin/pip-sync <(sed 's/^-e //g' requirements.txt)
        # pip-tools might have been downgraded to a broken version in the line above
        env/bin/pip install --upgrade pip-tools
        echo "source env/bin/activate" >> $BASH_ENV
        # quick fix. until debian package has got tz updates
        ln -s /usr/share/zoneinfo/Pacific/Enderbury /usr/share/zoneinfo/Pacific/Kanton

  - &add-token-to-remote
    run:
      name: set git remote to include token
      command: git remote set-url origin https://${GITHUB_TOKEN}@github.com/karrot-dev/karrot-backend.git

version: 2.1
jobs:
  test:
    <<: *defaults
    environment:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
    docker:
      - image: karrot/python:2.10
        environment:
          PGHOST: 127.0.0.1
      - image: cimg/postgres:11.16
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: karrot_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:5.0.3
    steps:
      - checkout
      - *restore-env-cache
      - *setup-env
      - *save-env-cache
      - run: |
          psql \
          -d "postgres://ubuntu@localhost:5432/template1" \
          -c "CREATE EXTENSION citext; CREATE EXTENSION btree_gist;"
      - run:
          name: setup
          command: |
            cp config/ci.env .env
            (cd mjml && yarn)
            mjml/convert
      # See https://github.com/karrot-dev/karrot-frontend/issues/2476
      #- run:
      #    name: flake8
      #    command: flake8 ./
      - run:
          name: no missing migrations?
          command: python manage.py makemigrations --dry-run --check --no-input
      - run:
          name: no missing makemessages?
          command: |
            set -xe
            python manage.py makemessages
            git add .
            git diff --staged --exit-code
      - run:
          name: run tests
          command: |
            mkdir -p test-reports
            pytest -n 4 --cov=karrot --cov-report xml --junitxml=test-reports/junit.xml
      - run:
          name: upload coverage
          command: |
            pip install codecov
            codecov
      - run:
          name: build
          environment:
            RSYNC_DESTINATION: 'karrot-download@yuca.yunity.org:/var/www/karrot-download/www/'
          command: |
            if [[ "$CIRCLE_BRANCH" = "master" ]] || [[ "$CIRCLE_BRANCH" = "production" ]]; then
              export FILENAME="karrot-backend-$(echo ${CIRCLE_TAG:-$CIRCLE_BRANCH} | sed 's/[^a-zA-Z0-9.-]/-/g').pyz"
              ./scripts/build "$FILENAME"
              rsync -e "ssh -o StrictHostKeyChecking=no" -av "$FILENAME" "$RSYNC_DESTINATION"
            else
              echo "Skipping build for ${CIRCLE_TAG:-$CIRCLE_BRANCH}"
            fi
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  push-locale-messages:
    <<: *defaults
    steps:
      - checkout
      - *restore-env-cache
      - run:
          name: install transifex client
          command: env/bin/pip install transifex-client
      - run:
          name: push source messages to transifex
          command: |
            set -xe
            source env/bin/activate
            tx push -s --no-interactive

  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-dev

  deploy-karrot-world:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-world

  update-locales:
    <<: *defaults
    steps:
      - checkout
      - *restore-env-cache
      - *setup-env
      - *save-env-cache
      - run:
          name: install tx client
          command: env/bin/pip install transifex-client
      - *add-token-to-remote
      - run:
          name: update locales and make pull request
          environment:
            BRANCH: circleci-update-locales
          command: |
            set -xe
            git config credential.helper 'cache --timeout=120'
            git config user.email "ci@foodsaving.world"
            git config user.name "CircleCI"
            git branch --delete --force $BRANCH || true
            git checkout -b $BRANCH
            env/bin/tx pull -a --force --no-interactive
            git add karrot/locale
            git commit -m "[CI] update locales" || exit 0
            git push --force origin $BRANCH
            hub pull-request -m "[CI] Update locales" || true

  update-dependencies:
    <<: *defaults
    steps:
      - checkout
      - *restore-env-cache
      - *setup-env
      - *add-token-to-remote
      - run:
          name: update dependencies and make pull request
          environment:
            BRANCH: circleci-update-dependencies
          command: |
            set -xe
            git config credential.helper 'cache --timeout=120'
            git config user.email "ci@foodsaving.world"
            git config user.name "CircleCI"
            git branch --delete --force $BRANCH || true
            git checkout -b $BRANCH
            pip-compile --upgrade --no-annotate
            # only need backports.zoneinfo for python < 3.9 (won't build on my 3.10 here)
            sed -i 's/\(backports.zoneinfo.*\)/\1;python_version<"3.9"/g' requirements.txt
            git add requirements.txt
            pushd mjml
            yarn upgrade --latest
            git add package.json yarn.lock
            popd
            git commit -m "[CI] update dependencies" || exit 0
            git push --force origin $BRANCH
            hub pull-request -F - \<<EOL || true
            [CI] update dependencies

            Good morning, I found some fresh dependencies for you!

            This Pull Request contains updates done by \`pip-compile --upgrade --no-annotate\` and
            in \`mjml\`, \`yarn upgrade --latest\`.

            Please check the changes before merging and consider trying out the branch locally to verify if it works.
            EOL

workflows:
  version: 2
  all-the-things:
    jobs:
      - test
      - push-locale-messages:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - deploy-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - deploy-karrot-world:
          filters:
            branches:
              only:
                - production
          requires:
            - test

  update-locales-cronjob:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only: master
    jobs:
      - update-locales

  update-dependencies-cronjob:
    triggers:
      - schedule:
          cron: "0 2 * * 0"
          filters:
            branches:
              only: master
    jobs:
      - update-dependencies
